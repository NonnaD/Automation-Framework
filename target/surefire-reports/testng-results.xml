<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-08-14T19:28:32Z" name="All Test Suite" finished-at="2018-08-14T19:34:06Z" duration-ms="333791">
    <groups>
      <group name="FlightOnly">
        <method signature="FlightOnlyMultiCity.multyCity()[pri:0, instance:positiveTC.FlightOnlyMultiCity@3667faa8]" name="multyCity" class="positiveTC.FlightOnlyMultiCity"/>
        <method signature="FlightOnlyRoundtrip.flightOnlyRoundtrip()[pri:0, instance:positiveTC.FlightOnlyRoundtrip@f425231]" name="flightOnlyRoundtrip" class="positiveTC.FlightOnlyRoundtrip"/>
        <method signature="FlightOnlyOneWay.flightOneWay()[pri:0, instance:positiveTC.FlightOnlyOneWay@2d760326]" name="flightOneWay" class="positiveTC.FlightOnlyOneWay"/>
      </group> <!-- FlightOnly -->
    </groups>
    <test started-at="2018-08-14T19:28:32Z" name="FlightOnly Test" finished-at="2018-08-14T19:28:32Z" duration-ms="26">
    </test> <!-- FlightOnly Test -->
    <test started-at="2018-08-14T19:28:32Z" name="Create an account Test" finished-at="2018-08-14T19:31:03Z" duration-ms="151270">
      <class name="positiveTC.CreateAnAccount">
        <test-method is-config="true" signature="initialize()[pri:0, instance:positiveTC.CreateAnAccount@2ee83775]" started-at="2018-08-14T12:28:32Z" name="initialize" finished-at="2018-08-14T12:30:39Z" duration-ms="127023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="craeteAccount(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:positiveTC.CreateAnAccount@2ee83775]" started-at="2018-08-14T12:30:39Z" name="craeteAccount" data-provider="getData" finished-at="2018-08-14T12:31:00Z" duration-ms="20488" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[qatester1905@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Qatesting123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Itester]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Testerlastname]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[We weren’t able to sign you up because there’s already an existing account for this email address. If you’ve forgotten your password, we’ll help to reset it expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: We weren’t able to sign you up because there’s already an existing account for this email address. If you’ve forgotten your password, we’ll help to reset it expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at positiveTC.CreateAnAccount.craeteAccount(CreateAnAccount.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- craeteAccount -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:positiveTC.CreateAnAccount@2ee83775]" started-at="2018-08-14T12:31:03Z" name="tearDown" finished-at="2018-08-14T12:31:03Z" duration-ms="481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- positiveTC.CreateAnAccount -->
    </test> <!-- Create an account Test -->
    <test started-at="2018-08-14T19:31:03Z" name="FlightOnlyMultiCity Test" finished-at="2018-08-14T19:31:31Z" duration-ms="27208">
      <class name="positiveTC.FlightOnlyMultiCity">
        <test-method is-config="true" signature="initialize()[pri:0, instance:positiveTC.FlightOnlyMultiCity@3667faa8]" started-at="2018-08-14T12:31:03Z" name="initialize" finished-at="2018-08-14T12:31:10Z" duration-ms="6604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="multyCity()[pri:0, instance:positiveTC.FlightOnlyMultiCity@3667faa8]" started-at="2018-08-14T12:31:10Z" name="multyCity" finished-at="2018-08-14T12:31:30Z" duration-ms="20440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multyCity -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:positiveTC.FlightOnlyMultiCity@3667faa8]" started-at="2018-08-14T12:31:30Z" name="tearDown" finished-at="2018-08-14T12:31:31Z" duration-ms="159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- positiveTC.FlightOnlyMultiCity -->
    </test> <!-- FlightOnlyMultiCity Test -->
    <test started-at="2018-08-14T19:31:31Z" name="FlightOnlyRoundTrip Test" finished-at="2018-08-14T19:31:50Z" duration-ms="19147">
      <class name="positiveTC.FlightOnlyRoundtrip">
        <test-method is-config="true" signature="initialize()[pri:0, instance:positiveTC.FlightOnlyRoundtrip@f425231]" started-at="2018-08-14T12:31:31Z" name="initialize" finished-at="2018-08-14T12:31:36Z" duration-ms="5058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="flightOnlyRoundtrip()[pri:0, instance:positiveTC.FlightOnlyRoundtrip@f425231]" started-at="2018-08-14T12:31:36Z" name="flightOnlyRoundtrip" finished-at="2018-08-14T12:31:50Z" duration-ms="13835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flightOnlyRoundtrip -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:positiveTC.FlightOnlyRoundtrip@f425231]" started-at="2018-08-14T12:31:50Z" name="tearDown" finished-at="2018-08-14T12:31:50Z" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- positiveTC.FlightOnlyRoundtrip -->
    </test> <!-- FlightOnlyRoundTrip Test -->
    <test started-at="2018-08-14T19:31:50Z" name="FlightOnlyOneWay Test" finished-at="2018-08-14T19:32:05Z" duration-ms="15501">
      <class name="positiveTC.FlightOnlyOneWay">
        <test-method is-config="true" signature="initialize()[pri:0, instance:positiveTC.FlightOnlyOneWay@2d760326]" started-at="2018-08-14T12:31:50Z" name="initialize" finished-at="2018-08-14T12:31:55Z" duration-ms="4843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="flightOneWay()[pri:0, instance:positiveTC.FlightOnlyOneWay@2d760326]" started-at="2018-08-14T12:31:55Z" name="flightOneWay" finished-at="2018-08-14T12:32:05Z" duration-ms="10414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flightOneWay -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:positiveTC.FlightOnlyOneWay@2d760326]" started-at="2018-08-14T12:32:05Z" name="tearDown" finished-at="2018-08-14T12:32:05Z" duration-ms="213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- positiveTC.FlightOnlyOneWay -->
    </test> <!-- FlightOnlyOneWay Test -->
    <test started-at="2018-08-14T19:32:05Z" name="Login Test" finished-at="2018-08-14T19:32:41Z" duration-ms="35878">
      <class name="positiveTC.Login">
        <test-method is-config="true" signature="initialize()[pri:0, instance:positiveTC.Login@7c1447b5]" started-at="2018-08-14T12:32:05Z" name="initialize" finished-at="2018-08-14T12:32:10Z" duration-ms="4901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="logIn(java.lang.String, java.lang.String)[pri:0, instance:positiveTC.Login@7c1447b5]" started-at="2018-08-14T12:32:10Z" name="logIn" data-provider="dataProvider" finished-at="2018-08-14T12:32:40Z" duration-ms="29306" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[qatester1905@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Qatesting123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at positiveTC.Login.logIn(Login.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logIn -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:positiveTC.Login@7c1447b5]" started-at="2018-08-14T12:32:41Z" name="tearDown" finished-at="2018-08-14T12:32:41Z" duration-ms="407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- positiveTC.Login -->
    </test> <!-- Login Test -->
    <test started-at="2018-08-14T19:32:41Z" name="FlightHotel Test" finished-at="2018-08-14T19:33:12Z" duration-ms="30960">
      <class name="positiveTC.FlightHotel">
        <test-method is-config="true" signature="initialize()[pri:0, instance:positiveTC.FlightHotel@345d053b]" started-at="2018-08-14T12:32:41Z" name="initialize" finished-at="2018-08-14T12:32:53Z" duration-ms="11480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="flightHotel()[pri:0, instance:positiveTC.FlightHotel@345d053b]" started-at="2018-08-14T12:32:53Z" name="flightHotel" finished-at="2018-08-14T12:33:12Z" duration-ms="19055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flightHotel -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:positiveTC.FlightHotel@345d053b]" started-at="2018-08-14T12:33:12Z" name="tearDown" finished-at="2018-08-14T12:33:12Z" duration-ms="424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- positiveTC.FlightHotel -->
    </test> <!-- FlightHotel Test -->
    <test started-at="2018-08-14T19:33:12Z" name="ThingsToDo Test" finished-at="2018-08-14T19:33:27Z" duration-ms="14348">
      <class name="positiveTC.ThingsToDo">
        <test-method is-config="true" signature="initialize()[pri:0, instance:positiveTC.ThingsToDo@777d0bc3]" started-at="2018-08-14T12:33:12Z" name="initialize" finished-at="2018-08-14T12:33:20Z" duration-ms="7083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="thingsToDo()[pri:0, instance:positiveTC.ThingsToDo@777d0bc3]" started-at="2018-08-14T12:33:20Z" name="thingsToDo" finished-at="2018-08-14T12:33:27Z" duration-ms="7135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- thingsToDo -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:positiveTC.ThingsToDo@777d0bc3]" started-at="2018-08-14T12:33:27Z" name="tearDown" finished-at="2018-08-14T12:33:27Z" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- positiveTC.ThingsToDo -->
    </test> <!-- ThingsToDo Test -->
    <test started-at="2018-08-14T19:33:27Z" name="Footer Test" finished-at="2018-08-14T19:34:06Z" duration-ms="38646">
      <class name="positiveTC.Footer">
        <test-method is-config="true" signature="initialize()[pri:0, instance:positiveTC.Footer@1e4c6583]" started-at="2018-08-14T12:33:27Z" name="initialize" finished-at="2018-08-14T12:33:34Z" duration-ms="7118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="footer()[pri:0, instance:positiveTC.Footer@1e4c6583]" started-at="2018-08-14T12:33:34Z" name="footer" finished-at="2018-08-14T12:34:05Z" duration-ms="30843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- footer -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:positiveTC.Footer@1e4c6583]" started-at="2018-08-14T12:34:05Z" name="tearDown" finished-at="2018-08-14T12:34:06Z" duration-ms="674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- positiveTC.Footer -->
    </test> <!-- Footer Test -->
  </suite> <!-- All Test Suite -->
</testng-results>
